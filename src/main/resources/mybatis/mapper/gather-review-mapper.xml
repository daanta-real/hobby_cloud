<?xml version="1.0" encoding="UTF-8" ?>

<!-- 
	myBatis 매퍼 파일
	- DBMS에서 실행할 SQL 구문을 저장하는 XML 파일
	- namespace를 통해서 여러 개의 매퍼를 구분한다
	- 테이블 당 1개씩 만드는 것이 일반적이며, 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다.
	- <insert> , <select> , <update> , <delete>를 이용해서 CRUD 구문을 작성한다.
	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다.
	- parameterType 은 구문을 실행하기 위해 필요한 데이터의 형태를 말한다.
	- resultType은 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다.
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gatherReview">

<!-- 평점 입력 -->
<insert id="insert" parameterType="GatherReviewDto">
insert into gather_review values( gather_review_seq.nextval,
			#{memberIdx},#{gatherIdx},
			#{gatherReviewScore},sysdate,
			#{gatherReviewDetail})
</insert>
<!-- 평점 내역 리스트 -->
<select id="list" parameterType="int" resultType="GatherReviewVO">
  select gr.*, m.member_nick, mp.member_profile_idx from gather g 
 inner  join
 gather_review  gr ON g.gather_idx = gr.gather_idx
 left outer join
member m ON g.member_idx = m.member_idx
 left outer join 
 member_profile mp ON m.member_idx =mp.member_idx where g.gather_idx=#{gatherIdx}
</select>

<!-- 평점 삭제 -->
<delete id="delete" parameterType="int">
 delete from gather_review where gather_review_idx=#{gatherReviewIdx}
</delete>

<!-- 평점 수정 -->
<update id="edit" parameterType="GatherReviewDto">
update gather_review set
gather_review_detail=#{gatherReviewDetail},
gather_review_score=#{gatherReviewScore},
gather_review_registered=sysdate 
where 
gather_review_idx =#{gatherReviewIdx}
</update>

</mapper>