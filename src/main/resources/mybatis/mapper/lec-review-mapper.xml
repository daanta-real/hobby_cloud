<?xml version="1.0" encoding="UTF-8" ?>

<!-- 
	myBatis 매퍼 파일
	- DBMS에서 실행할 SQL 구문을 저장하는 XML 파일
	- namespace를 통해서 여러 개의 매퍼를 구분한다
	- 테이블 당 1개씩 만드는 것이 일반적이며, 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다.
	- <insert> , <select> , <update> , <delete>를 이용해서 CRUD 구문을 작성한다.
	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다.
	- parameterType 은 구문을 실행하기 위해 필요한 데이터의 형태를 말한다.
	- resultType은 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다.
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lecReview">

<!-- 평점 입력 -->
<insert id="insert" parameterType="LecReviewDto">
insert into lec_review values(lec_review_seq.nextval,
			#{lecIdx}, #{memberIdx},
			#{lecReviewScore}, sysdate,
			#{lecReviewDetail})
</insert>

<!-- 평점 내역 리스트 -->
<select id="list" parameterType="int" resultType="LecReviewVO">
 select lr.*, m.member_nick, mp.member_profile_idx from lec l 
 	inner  join
 		lec_review lr ON l.lec_idx = lr.lec_idx
 	left outer join
		member m ON lr.member_idx = m.member_idx
 	left outer join 
 		member_profile mp ON m.member_idx = mp.member_idx
 where l.lec_idx = #{lecIdx}
</select>

<!-- 평점 내역 페이지네이션 적용 -->
<select id="listBy" parameterType="map" resultType="LecReviewVO">
select * from(
	select rownum  rn , TMP.* from(
		 select lr.*, m.member_nick, mp.member_profile_idx from lec l 
		 	inner  join
		 		lec_review lr ON l.lec_idx = lr.lec_idx
		 	left outer join
				member m ON lr.member_idx = m.member_idx
		 	left outer join 
		 		member_profile mp ON m.member_idx = mp.member_idx
		 where l.lec_idx = #{lecIdx}
 	)TMP
) where rn between #{startRow} and #{endRow}
</select>

<!-- 평점 삭제 -->
<delete id="delete" parameterType="int">
 	delete from lec_review where lec_review_idx = #{lecReviewIdx}
</delete>

<!-- 평점 수정 -->
<update id="edit" parameterType="LecReviewDto">
update lec_review set
	lec_review_detail = #{lecReviewDetail},
	lec_review_score = #{lecReviewScore},
	lec_review_registered = sysdate 
where lec_review_idx = #{lecReviewIdx}
</update>

</mapper>