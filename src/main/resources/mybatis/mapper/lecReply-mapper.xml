<?xml version="1.0" encoding="UTF-8" ?>

<!-- 
	myBatis 매퍼 파일
	- DBMS에서 실행할 SQL 구문을 저장하는 XML 파일
	- namespace를 통해서 여러 개의 매퍼를 구분한다
	- 테이블 당 1개씩 만드는 것이 일반적이며, 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다.
	- <insert> , <select> , <update> , <delete>를 이용해서 CRUD 구문을 작성한다.
	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다.
	- parameterType 은 구문을 실행하기 위해 필요한 데이터의 형태를 말한다.
	- resultType은 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다.
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lecReply">
	
	<!-- 댓글 리스트 -->
	<select id="replyList" parameterType="int" resultType="LecReplyVO">
		
	</select>
	
	<!-- 댓글 쓰기 -->
	<insert id="replyWrite" parameterType="LecReplyVO">
		insert into lec_reply
		values(
		lec_reply_seq.nextval , #{memberIdx}, #{lecIdx},
		#{lecReplyDetail}, sysdate, 0,
		#{lecReplyGroupno}, 0
		)
	</insert>
	
	<!-- 모댓글일 경우 lecReplyIdx와 groupno가 일치하게 함 -->
	<update id="replyCheck" parameterType="LecReplyVO">
		update lec_reply set lec_reply_groupno = #{lecReplyGroupno}
		where no != lec_reply_groupno
	</update>
	
	<!-- 모댓글이 삭제된 댓글일때 그에 딸린 답글들도 모두 삭제되면 테이블에서 완전 삭제 -->
	<delete id="replyDeleteAfterRereplyDelete" parameterType="LecReplyVO">
		delete
	</delete>
	
	
	
</mapper>
